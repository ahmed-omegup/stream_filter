version: '3.8'

services:
  router:
    build:
      context: ./router
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    container_name: stream_filter_router
    networks:
      - stream_filter_network

  filter:
    build:
      context: ./filter/bun
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: stream_filter_filter
    environment:
      - NUM_CUSTOMERS=${NUM_CUSTOMERS:-100000}
      - MAX_DATE=${MAX_DATE:-100000}
      - MAX_SPAN=${MAX_SPAN:-10}
      - MAX_SPLITS=${MAX_SPLITS:-3}
      - PRODUCER_PORT=${PRODUCER_PORT:-8080}
      - ROUTER_HOST=router
      - ROUTER_PORT=8000
    networks:
      - stream_filter_network
    depends_on:
      - router

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    container_name: stream_filter_producer
    environment:
      - MAX_DATE=${MAX_DATE:-100000}
      - MSS=${MSS:-65000}
      - ROUTER_HOST=filter
      - ROUTER_PORT=8080
      - EVENT_COUNT=${EVENT_COUNT:-2000000}
    networks:
      - stream_filter_network
    depends_on:
      - filter
    restart: "no"  # Producer runs once and exits

  # filter:
  #   build:
  #     context: ./filter
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8002:8002"
  #   container_name: stream_filter_filter
  #   networks:
  #     - stream_filter_network
  #   depends_on:
  #     - router

networks:
  stream_filter_network:
    driver: bridge

volumes:
  stream_filter_data:
    driver: local
