services:
  router:
    build:
      context: ./router
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    container_name: stream_filter_router
    networks:
      - stream_filter_network
    profiles: [bun, gleam]

  filter-bun:
    build:
      context: ./filter/bun
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: stream_filter_filter
    environment:
      - NUM_CUSTOMERS=${NUM_CUSTOMERS:-100000}
      - MAX_DATE=${MAX_DATE:-100000}
      - MAX_SPAN=${MAX_SPAN:-10}
      - MAX_SPLITS=${MAX_SPLITS:-100}
      - PRODUCER_PORT=${PRODUCER_PORT:-8080}
      - ROUTER_HOST=router
      - ROUTER_PORT=8000
    networks:
      stream_filter_network:
        aliases:
          - filter
    depends_on:
      - router
    profiles: [bun]
  filter-gleam:
    build:
      context: ./filter/gleam/stream_filter
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: stream_filter_filter
    environment:
      - NUM_CUSTOMERS=${NUM_CUSTOMERS:-100000}
      - MAX_DATE=${MAX_DATE:-100000}
      - MAX_SPAN=${MAX_SPAN:-10}
      - ROUTER_HOST=${ROUTER_HOST:-router}
      - ROUTER_PORT=${ROUTER_PORT:-8000}
    networks:
      stream_filter_network:
        aliases:
          - filter
    depends_on:
      - router
    profiles: [gleam]

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    container_name: stream_filter_producer
    environment:
      - MAX_DATE=${MAX_DATE:-100000}
      - MSS=${MSS:-65000}
      - ROUTER_HOST=${FILTER_HOST:-filter}
      - ROUTER_PORT=${FILTER_PORT:-8080}
      - EVENT_COUNT=${EVENT_COUNT:-2000000}
    networks:
      - stream_filter_network
    restart: "no"  # Producer runs once and exits
    profiles: [bun, gleam]


networks:
  stream_filter_network:
    driver: bridge

volumes:
  stream_filter_data:
    driver: local
